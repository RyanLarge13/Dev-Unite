// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @unique @default(uuid())
  bio String
  email String
  github String
  position String
  avatarUrl String
  displayName String
  openGitHubProjects String[]
  lookingForHelp Boolean @default(false)
  lookingForProjects Boolean @default(true)
  tags Tag[]
  posts Post[]
  projects Project[]
  messages Message[]
  categories Category[]
  conversations Conversation[]
  adminProjects Project[] @relation(name: "admin")
}

model Project {
  id String @id @unique @default(uuid())
  adminId String 
  conversationId String
  tags Tag[]
  users User[]
  categories Category[]
  conversation Conversation?
  admin User @relation(name: "admin", fields: [adminId], references: [id])
}

model Category {
  id String @id @unique @default(uuid())
  users User[]
  projects Project[]
}

model Tag {
  id String @id @unique @default(uuid())
  title String @unique
  users User[]
  projects Project[]
}

model Conversation {
  id String @id @unique @default(uuid())
  projectId String @unique
  users User[]
  messages Message[]
  project Project @relation(fields: [projectId], references: [id])
}

model Message {
  id String @id @unique @default(uuid())
  userId String
  convoId String
  text String
  time DateTime @default(now())
  from User @relation(fields: [userId], references: [id])
  conversation Conversation @relation(fields: [convoId], references: [id])
}

model Post {
  id String @id @unique @default(uuid())
  userId String
  markdown String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  user User @relation(fields: [userId], references: [id])
}